---
jobs:
- name: deploy-production
  public: true
  serial: true
  plan:
  - aggregate:
    - {get: stemcell, trigger: true}
    - {get: release-concourse, trigger: true}
    - {get: release-garden-linux, trigger: true}
    - {get: pipeline, resource: git-pipeline, trigger: false}
    - {get: production-pipeline-changes, trigger: true}
    - {get: production-env-changes, trigger: true}
    - {get: release-version, trigger: false, params: {bump: patch}}
  - task: make-manifest
    config:
      platform: linux
      image: {{docker-hub-task-image}}
      inputs:
      - {name: pipeline, path: .}
      - {name: stemcell, path: production/stemcell}
      - {name: release-concourse, path: production/releases/concourse}
      - {name: release-garden-linux, path: production/releases/garden-linux}
      run: {path: ./production/bin/create_stub_make_manifest_and_save.sh}
  - task: git-add
    config:
      platform: linux
      image: {{docker-hub-task-image}}
      inputs:
      - {name: make-manifest}
      run:
        path: ./make-manifest/production/bin/git-add-stage-changes.sh
        args: ["[production] Update manifest"]
  - put: git-pipeline
    params:
      repository: git-add/make-manifest
      rebase: true

  - task: bosh-cli-version
    config:
      platform: linux
      image: {{docker-hub-task-image}}
      inputs: []
      run:
        path: bosh
        args: [--version]
  - task: bosh-info
    config:
      platform: linux
      image: {{docker-hub-task-image}}
      inputs: []
      run:
        path: bosh
        args: [-n, -t, {{bosh-target}}, -u, {{bosh-username}}, -p, {{bosh-password}}, status]
  - put: deployment-production
    params:
      manifest: make-manifest/production/manifests/manifest.yml
      releases: [release-*/*.tgz]
      stemcells: [stemcell/*.tgz]

  - put: release-version
    params: {file: release-version/number}

  - task: save-deployment-pipeline
    config:
      platform: linux
      image: {{docker-hub-task-image}}
      inputs:
      - {name: release-version}
      - {name: make-manifest, path: .}
      - {name: release-concourse}
      - {name: release-garden-linux}
      - {name: stemcell}
      run: {path: ./production/bin/save_deployment_pipeline.sh}

  - put: s3-candidate-assets
    params: {from: save-deployment-pipeline/pipeline-assets-(.*).tgz}

resources:
- name: stemcell
  type: bosh-io-stemcell
  source:
    name: {{bosh-stemcell-name}}
    version: {{bosh-stemcell-version}}

- name: release-concourse
  type: bosh-io-release
  source: {repository: concourse/concourse}

- name: release-garden-linux
  type: bosh-io-release
  source: {repository: cloudfoundry-incubator/garden-linux-release}

- name: git-pipeline
  type: git
  source:
    uri: {{pipeline-git-repo}}
    branch: {{pipeline-branch}}
    private_key: {{github-private-key}}

- name: production-env-changes
  type: git
  source:
    uri: {{pipeline-git-repo}}
    branch: {{pipeline-branch}}
    private_key: {{github-private-key}}
    paths: [production/environment]

- name: production-pipeline-changes
  type: git
  source:
    uri: {{pipeline-git-repo}}
    branch: {{pipeline-branch}}
    private_key: {{github-private-key}}
    paths: [production/pipeline]

- name: deployment-production
  type: bosh-deployment
  source:
    target: {{bosh-target}}
    username: {{bosh-username}}
    password: {{bosh-password}}
    deployment: concourse-production
    ignore_ssl: true

- name: release-version
  type: semver
  source:
    bucket: {{aws-pipeline-bucket}}
    key: release-version
    initial_version: 0.1.0
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}
    region_name: us-east-1

- name: s3-candidate-assets
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}
    region_name: {{aws-region-name}}
    bucket:  {{aws-pipeline-bucket}}
    private: true
    regexp: pipeline-assets-(.*).tgz
